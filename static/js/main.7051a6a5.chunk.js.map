{"version":3,"sources":["components/logo.svg","components/PageHeader.jsx","components/Coin.jsx","components/CoinList.jsx","components/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Img","styled","img","Header","header","H1","h1","PageHeader","src","logo","alt","Component","Td","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleBalanceVisibilityChange","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","className","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7051a6a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;dir\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: black;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default class PageHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                    Coin Exchange\r\n                </H1>\r\n            </Header> \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Td = styled.td`\r\n    font-size: 2rem;\r\n    border-radius: 2px;\r\n    border: 1px solid rgb(130, 190, 230);\r\n    color: rgb(130, 190, 230);\r\n    margin: 0 1em;\r\n    padding: 1.5rem 0 1.5rem 2rem;\r\n    width: 30vh;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n    const handleClick = (event) => {\r\n        // Prevent default action of submitting form\r\n        event.preventDefault();\r\n\r\n        props.handleRefresh(props.tickerId);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>$ {props.price}</Td>\r\n            {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <button onClick={handleClick}>Refresh</button>\r\n                </form>\r\n            </Td>\r\n        </tr>  \r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Coin from './Coin';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.25rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    return (\r\n        <Table>\r\n        <thead>  \r\n            <tr>        \r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                {props.showBalance ? <th>Balance</th> : null}\r\n                <th>Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            props.coinData.map( ({key, name, ticker, price, balance}) =>\r\n                <Coin   key={key} \r\n                        handleRefresh={props.handleRefresh}\r\n                        name={name} \r\n                        ticker={ticker} \r\n                        showBalance={props.showBalance}\r\n                        balance={balance}\r\n                        price={price}  \r\n                        tickerId={key}  />\r\n            )\r\n        }\r\n        </tbody>\r\n        </Table> \r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = styled.section`\r\n    background: transparent;\r\n    font-size: 4rem;\r\n    border-radius: 4px;\r\n    border: 1px solid rgb(130, 190, 230);\r\n    color: rgb(130, 190, 230);\r\n    margin: 0 1em;\r\n    padding: 1.5rem 0 1.5rem 2rem;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = null;\r\n    if ( props.showBalance ) {\r\n        content = <>Balance: ${props.amount}</>;\r\n    }\r\n    return (\r\n        <Section>\r\n            {content} \r\n            <button onClick={props.handleBalanceVisibilityChange}> {buttonText}</button>\r\n        </Section>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React, {useState, useEffect} from 'react'; \nimport styled from 'styled-components';\nimport PageHeader from './components/PageHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport axios from 'axios';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(0, 0, 0);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10; // number of coins retrieved\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    //retrieve the coin list\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins'); \n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerURL = ('https://api.coinpaprika.com/v1/tickers/');\n    const promises = coinIds.map(id => axios.get(tickerURL + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    // retrieve coin prices \n    setCoinData(coinPriceData);\n  } \n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount(); \n    }\n  });\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = (`https://api.coinpaprika.com/v1/tickers/${valueChangeId}`);\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };  \n      if ( valueChangeId === values.key ) { \n        newValues.price = newPrice;\n        }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div className=\"App\">\n      <PageHeader />   \n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange} />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleRefresh={handleRefresh} />\n    </Div>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}